{"version":3,"sources":["webpack:///./src/components/Summary/Wrapper.js","webpack:///./src/components/Summary/Link.js","webpack:///./src/components/Summary/Date.js","webpack:///./src/components/Summary/ContinueReading.js","webpack:///./src/components/Summary/index.js","webpack:///./src/templates/index.js"],"names":["Wrapper","styled","div","Link","GatsbyLink","userConfig","primaryColor","Date","span","ContinueReading","Summary","_ref","date","title","excerpt","slug","image","React","createElement","to","FeaturedImage","sizes","childImageSharp","H1","P","IndexPage","pageContext","group","Layout","showHeader","Container","Helmet","author","htmlAttributes","lang","name","content","description","map","_ref2","node","Card","key","fields","frontmatter","featuredImage"],"mappings":"yPAMeA,MAJCC,UAAOC,GAAG;;uBCWXC,MATFF,kBAAOG,IAAW;;;;;iBAKdC,IAAWC;;ECCbC,MARFN,UAAOO,IAAI;;;;;;ECcTC,MAZSR,kBAAOG,IAAW;;;;;;;;iBAQzBC,IAAWC;;ECcbI,MAhBf,SAAgBC,GAAuC,IAAtC,KAACC,EAAI,MAAEC,EAAK,QAAEC,EAAO,KAAEC,EAAI,MAAEC,GAAML,EAClD,OACEM,IAAAC,cAAClB,EAAO,KACLgB,GACCC,IAAAC,cAACf,EAAI,CAACgB,GAAIJ,GACRE,IAAAC,cAACE,IAAa,CAACC,MAAOL,EAAMM,gBAAgBD,SAGhDJ,IAAAC,cAACK,IAAE,KAACN,IAAAC,cAACf,EAAI,CAACgB,GAAIJ,GAAOF,IACrBI,IAAAC,cAACX,EAAI,KAAEK,GACPK,IAAAC,cAACM,IAAC,KAAEV,GACJG,IAAAC,cAACT,EAAe,CAACU,GAAIJ,GAAM,wBCgBlBU,UA7BGd,IAAoB,IAAnB,YAACe,GAAYf,EAC9B,MAAM,MAACgB,GAASD,EAChB,OACET,IAAAC,cAACU,IAAM,CAACC,YAAY,GAClBZ,IAAAC,cAACY,IAAS,KACRb,IAAAC,cAACa,IAAM,CACLlB,MAAO,GAAGR,IAAWQ,WAAWR,IAAW2B,SAC3CC,eAAgB,CAACC,KAAM,OAEvBjB,IAAAC,cAAA,QACEiB,KAAK,cACLC,QAAS,GAAG/B,IAAWQ,WAAWR,IAAWgC,iBAGhDV,EAAMW,IAAIC,IAAA,IAAC,KAACC,GAAKD,EAAA,OAChBtB,IAAAC,cAACuB,IAAI,CAACC,IAAKF,EAAKG,OAAO5B,MACrBE,IAAAC,cAACR,EAAO,CACNE,KAAM4B,EAAKI,YAAYhC,KACvBC,MAAO2B,EAAKI,YAAY/B,MACxBC,QAAS0B,EAAK1B,QACdE,MAAOwB,EAAKI,YAAYC,cACxB9B,KAAMyB,EAAKG,OAAO5B","file":"component---src-templates-index-js-d0185129352c3f93887d.js","sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n    text-align: center;\n`;\n\nexport default Wrapper;\n","import styled from 'styled-components';\nimport GatsbyLink from 'gatsby-link';\nimport userConfig from '../../../config';\n\nconst Link = styled(GatsbyLink)`\n    color: #3e465b;\n    text-decoration: none;\n\n    &:hover {\n        color: ${userConfig.primaryColor};\n    }\n`;\n\nexport default Link;\n","import styled from 'styled-components';\n\nconst Date = styled.span`\n    color: #666d71;\n    display: block;\n    font-size: 1.6em;\n    margin: 0;\n    text-align: center;\n`;\n\nexport default Date;\n","import styled from 'styled-components';\nimport GatsbyLink from 'gatsby-link';\nimport userConfig from '../../../config';\n\nconst ContinueReading = styled(GatsbyLink)`\n    color: #666d71;\n    display: inline-block;\n    font-size: 14px;\n    margin-top: 50px;\n    text-decoration: none;\n\n    &:hover {\n        color: ${userConfig.primaryColor};\n    }\n`;\n\nexport default ContinueReading;\n","import React from 'react';\r\n\r\nimport FeaturedImage from '../FeaturedImage';\r\nimport H1 from '../H1';\r\nimport P from '../P';\r\nimport Wrapper from './Wrapper';\r\nimport Link from './Link';\r\nimport Date from './Date';\r\nimport ContinueReading from './ContinueReading';\r\n\r\nfunction Summary({date, title, excerpt, slug, image}) {\r\n  return (\r\n    <Wrapper>\r\n      {image &&\r\n        <Link to={slug}>\r\n          <FeaturedImage sizes={image.childImageSharp.sizes}/>\r\n        </Link>\r\n      }\r\n      <H1><Link to={slug}>{title}</Link></H1>\r\n      <Date>{date}</Date>\r\n      <P>{excerpt}</P>\r\n      <ContinueReading to={slug}>Continue Reading &rarr;</ContinueReading>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Summary;\r\n","import Helmet from 'react-helmet';\r\nimport React from 'react';\r\nimport userConfig from '../../config';\r\nimport Layout from './layout';\r\nimport Card from '../components/Card';\r\nimport Container from '../components/Container';\r\nimport Summary from '../components/Summary';\r\n\r\nconst IndexPage = ({pageContext}) => {\r\n  const {group} = pageContext;\r\n  return (\r\n    <Layout showHeader={true}>\r\n      <Container>\r\n        <Helmet\r\n          title={`${userConfig.title} | ${userConfig.author}`}\r\n          htmlAttributes={{lang: 'en'}}\r\n        >\r\n          <meta\r\n            name=\"description\"\r\n            content={`${userConfig.title} | ${userConfig.description}`}\r\n          />\r\n        </Helmet>\r\n        {group.map(({node}) => (\r\n          <Card key={node.fields.slug}>\r\n            <Summary\r\n              date={node.frontmatter.date}\r\n              title={node.frontmatter.title}\r\n              excerpt={node.excerpt}\r\n              image={node.frontmatter.featuredImage}\r\n              slug={node.fields.slug}\r\n            />\r\n          </Card>\r\n        ))}\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\nexport default IndexPage;\r\n"],"sourceRoot":""}