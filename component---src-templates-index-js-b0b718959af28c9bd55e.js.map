{"version":3,"sources":["webpack:///./src/components/Pagination/Wrapper.js","webpack:///./src/components/Pagination/index.js","webpack:///./src/components/Summary/Wrapper.js","webpack:///./src/components/Summary/Link.js","webpack:///./src/components/Summary/Date.js","webpack:///./src/components/Summary/ContinueReading.js","webpack:///./src/components/Summary/index.js","webpack:///./src/templates/index.js"],"names":["Wrapper","styled","div","Pagination","_ref","previousUrl","nextUrl","isFirst","isLast","React","createElement","Button","to","Link","GatsbyLink","userConfig","primaryColor","Date","span","ContinueReading","Summary","date","title","excerpt","slug","image","FeaturedImage","sizes","childImageSharp","H1","P","IndexPage","pageContext","group","index","pageCount","toString","Layout","Container","Helmet","author","htmlAttributes","lang","name","content","description","map","_ref2","node","Card","key","fields","frontmatter","featuredImage"],"mappings":"qNAOeA,MALCC,UAAOC,GAAG;;;cCgBXC,MAbf,SAAmBC,GAA2D,IAA1D,YAACC,EAAW,QAAEC,EAAO,QAAEC,GAAU,EAAK,OAAEC,GAAS,GAAMJ,EACzE,OACEK,IAAAC,cAACV,EAAO,MACJO,GACAE,IAAAC,cAACC,IAAM,CAACC,GAAIP,GAAa,kBAEzBG,GACAC,IAAAC,cAACC,IAAM,CAACC,GAAIN,GAAS,mB,oCCNdN,MAJCC,UAAOC,GAAG;;uBCWXW,MATFZ,kBAAOa,IAAW;;;;;aAKlBC,IAAWC;;ECCTC,MARFhB,UAAOiB,IAAI;;;;;;ECcTC,MAZSlB,kBAAOa,IAAW;;;;;;;;aAQ7BC,IAAWC;;ECcTI,MAhBf,SAAgBhB,GAAuC,IAAtC,KAACiB,EAAI,MAAEC,EAAK,QAAEC,EAAO,KAAEC,EAAI,MAAEC,GAAMrB,EAClD,OACEK,IAAAC,cAACV,EAAO,KACHyB,GACChB,IAAAC,cAACG,EAAI,CAACD,GAAIY,GACRf,IAAAC,cAACgB,IAAa,CAACC,MAAOF,EAAMG,gBAAgBD,SAGhDlB,IAAAC,cAACmB,IAAE,KAACpB,IAAAC,cAACG,EAAI,CAACD,GAAIY,GAAOF,IACrBb,IAAAC,cAACO,EAAI,KAAEI,GACPZ,IAAAC,cAACoB,IAAC,KAAEP,GACJd,IAAAC,cAACS,EAAe,CAACP,GAAIY,GAAM,wBC4BpBO,UArCG3B,IAAsB,IAArB,YAAE4B,GAAa5B,EAChC,MAAM,MAAE6B,EAAK,MAAEC,EAAK,UAAEC,GAAcH,EAC9B3B,EAAc6B,EAAQ,GAAM,EAAI,IAAMA,EAAQ,GAAGE,WACjD9B,GAAW4B,EAAQ,GAAGE,WAC5B,OACE3B,IAAAC,cAAC2B,IAAM,KACL5B,IAAAC,cAAC4B,IAAS,KACR7B,IAAAC,cAAC6B,IAAM,CACLjB,MAAO,GAAGP,IAAWO,WAAWP,IAAWyB,SAC3CC,eAAgB,CAAEC,KAAM,OAExBjC,IAAAC,cAAA,QACEiC,KAAK,cACLC,QAAS,GAAG7B,IAAWO,WAAWP,IAAW8B,iBAGhDZ,EAAMa,IAAIC,IAAA,IAAC,KAAEC,GAAMD,EAAA,OAClBtC,IAAAC,cAACuC,IAAI,CAACC,IAAKF,EAAKG,OAAO3B,MACrBf,IAAAC,cAACU,EAAO,CACNC,KAAM2B,EAAKI,YAAY/B,KACvBC,MAAO0B,EAAKI,YAAY9B,MACxBC,QAASyB,EAAKzB,QACdE,MAAOuB,EAAKI,YAAYC,cACxB7B,KAAMwB,EAAKG,OAAO3B,UAIxBf,IAAAC,cAACP,EAAU,CACTI,QAAmB,IAAV2B,EACT1B,OAAQ0B,IAAUC,EAClB7B,QAASA,EACTD,YAAaA","file":"component---src-templates-index-js-b0b718959af28c9bd55e.js","sourcesContent":["import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  margin-top: 50px;\n  text-align: center;\n`;\n\nexport default Wrapper;","import React from 'react';\r\n\r\nimport Wrapper from './Wrapper';\r\nimport Button from '../Button';\r\n\r\nfunction Pagination({previousUrl, nextUrl, isFirst = false, isLast = false}) {\r\n  return (\r\n    <Wrapper>\r\n      {!isFirst &&\r\n        <Button to={previousUrl}>&larr; Newer Posts</Button>\r\n      }\r\n      {!isLast &&\r\n        <Button to={nextUrl}>Older Posts &rarr;</Button>\r\n      }\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Pagination;","import styled from 'styled-components';\n\nconst Wrapper = styled.div`\n  text-align: center;\n`;\n\nexport default Wrapper;","import styled from 'styled-components';\nimport GatsbyLink from 'gatsby-link';\nimport userConfig from '../../../config';\n\nconst Link = styled(GatsbyLink)`\n  color: #3e465b;\n  text-decoration: none;\n\n  &:hover {\n    color: ${userConfig.primaryColor};\n  }\n`;\n\nexport default Link;","import styled from 'styled-components';\n\nconst Date = styled.span`\n  color: #666d71;\n  display: block;\n  font-size: 1.6em;\n  margin: 0;\n  text-align: center;\n`;\n\nexport default Date;","import styled from 'styled-components';\nimport GatsbyLink from 'gatsby-link';\nimport userConfig from '../../../config';\n\nconst ContinueReading = styled(GatsbyLink)`\n  color: #666d71;\n  display: inline-block;\n  font-size: 14px;\n  margin-top: 50px;\n  text-decoration: none;\n\n  &:hover {\n    color: ${userConfig.primaryColor};\n  }  \n`;\n\nexport default ContinueReading;","import React from 'react';\r\n\r\nimport FeaturedImage from '../FeaturedImage';\r\nimport H1 from '../H1';\r\nimport P from '../P';\r\nimport Wrapper from './Wrapper';\r\nimport Link from './Link';\r\nimport Date from './Date';\r\nimport ContinueReading from './ContinueReading';\r\n\r\nfunction Summary({date, title, excerpt, slug, image}) {\r\n  return (\r\n    <Wrapper>\r\n        {image &&\r\n          <Link to={slug}>\r\n            <FeaturedImage sizes={image.childImageSharp.sizes}/>\r\n          </Link>\r\n        }\r\n        <H1><Link to={slug}>{title}</Link></H1>\r\n        <Date>{date}</Date>\r\n        <P>{excerpt}</P>\r\n        <ContinueReading to={slug}>Continue Reading &rarr;</ContinueReading>\r\n    </Wrapper>\r\n  );\r\n}\r\n\r\nexport default Summary;","import Helmet from 'react-helmet';\r\nimport React from 'react';\r\n\r\nimport userConfig from '../../config';\r\n\r\nimport Layout from './layout';\r\n\r\nimport Card from '../components/Card';\r\nimport Container from '../components/Container';\r\nimport Pagination from '../components/Pagination';\r\nimport Summary from '../components/Summary';\r\n\r\nconst IndexPage = ({ pageContext }) => {\r\n  const { group, index, pageCount } = pageContext;\r\n  const previousUrl = index - 1 === 1 ? '' : (index - 1).toString();\r\n  const nextUrl = (index + 1).toString();\r\n  return (\r\n    <Layout>\r\n      <Container>\r\n        <Helmet\r\n          title={`${userConfig.title} | ${userConfig.author}`}\r\n          htmlAttributes={{ lang: 'en' }}\r\n        >\r\n          <meta\r\n            name=\"description\"\r\n            content={`${userConfig.title} | ${userConfig.description}`}\r\n          />\r\n        </Helmet>\r\n        {group.map(({ node }) => (\r\n          <Card key={node.fields.slug}>\r\n            <Summary\r\n              date={node.frontmatter.date}\r\n              title={node.frontmatter.title}\r\n              excerpt={node.excerpt}\r\n              image={node.frontmatter.featuredImage}\r\n              slug={node.fields.slug}\r\n            />\r\n          </Card>\r\n        ))}\r\n        <Pagination\r\n          isFirst={index === 1}\r\n          isLast={index === pageCount}\r\n          nextUrl={nextUrl}\r\n          previousUrl={previousUrl}\r\n        />\r\n      </Container>\r\n    </Layout>\r\n  );\r\n};\r\nexport default IndexPage;\r\n"],"sourceRoot":""}